name=wang
passwd=123
url.name=www.google.com

## stream-stream
spring.cloud.stream.default-binder=kafka
spring.kafka.bootstrap-servers=172.17.0.229:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.ByteArraySerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer

# 若kafka消息发送为同步方式 (默认为同步方式 sync)
# acks=0 不和Kafka集群进行消息接收确认，则当网络异常、缓冲区满了等情况时，消息可能丢失；
# acks=1 同步模式下，只有Leader确认接收成功后但挂掉了，副本没有同步，数据可能丢失；
# acks=-1 表示Leader和Follower都接收成功时确认
spring.kafka.request.required.acks=-1

spring.cloud.stream.bindings.pay_message_input.destination=pay-message
spring.cloud.stream.bindings.pay_message_input=pay-message
spring.cloud.stream.bindings.pay_message_output.destination=pay-message
spring.cloud.stream.bindings.pay_message_input.consumer.max-attempts=1

## redis
spring.redis.host=172.17.0.229
spring.redis.port=6379
spring.redis.pool.max-active=20    
spring.redis.pool.max-wait=-1    
spring.redis.pool.max-idle=20    
spring.redis.pool.min-idle=0    
spring.redis.timeout=5000